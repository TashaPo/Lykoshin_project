{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Goose Gaming\\\\Lykoshin_project\\\\auth-app\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/components/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode'; // Дефолтный импорт\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    console.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL); // Отладочный вывод\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token); // Используем jwtDecode как функцию\n        // Проверяем, не истёк ли токен\n        if (decoded.exp * 1000 < Date.now()) {\n          localStorage.removeItem('token');\n          setUser(null);\n        } else {\n          setUser({\n            userId: decoded.userId,\n            username: decoded.username\n          });\n        }\n      } catch (error) {\n        console.error('Invalid token', error);\n        setUser(null);\n      }\n    }\n  }, []);\n  const login = token => {\n    localStorage.setItem('token', token);\n    const decoded = jwtDecode(token); // Используем jwtDecode как функцию\n    setUser({\n      userId: decoded.userId,\n      username: decoded.username\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","console","log","process","env","REACT_APP_API_URL","token","localStorage","getItem","decoded","exp","Date","now","removeItem","userId","username","error","login","setItem","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Goose Gaming/Lykoshin_project/auth-app/src/components/AuthContext.js"],"sourcesContent":["// src/components/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport jwtDecode from 'jwt-decode'; // Дефолтный импорт\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        console.log('REACT_APP_API_URL:', process.env.REACT_APP_API_URL); // Отладочный вывод\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decoded = jwtDecode(token); // Используем jwtDecode как функцию\r\n                // Проверяем, не истёк ли токен\r\n                if (decoded.exp * 1000 < Date.now()) {\r\n                    localStorage.removeItem('token');\r\n                    setUser(null);\r\n                } else {\r\n                    setUser({ userId: decoded.userId, username: decoded.username });\r\n                }\r\n            } catch (error) {\r\n                console.error('Invalid token', error);\r\n                setUser(null);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const login = (token) => {\r\n        localStorage.setItem('token', token);\r\n        const decoded = jwtDecode(token); // Используем jwtDecode как функцию\r\n        setUser({ userId: decoded.userId, username: decoded.username });\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CAAC,CAAC;IAClE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP,IAAI;QACA,MAAMG,OAAO,GAAGjB,SAAS,CAACc,KAAK,CAAC,CAAC,CAAC;QAClC;QACA,IAAIG,OAAO,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;UACjCL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;UAChCb,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC,MAAM;UACHA,OAAO,CAAC;YAAEc,MAAM,EAAEL,OAAO,CAACK,MAAM;YAAEC,QAAQ,EAAEN,OAAO,CAACM;UAAS,CAAC,CAAC;QACnE;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZf,OAAO,CAACe,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACrChB,OAAO,CAAC,IAAI,CAAC;MACjB;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,KAAK,GAAIX,KAAK,IAAK;IACrBC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpC,MAAMG,OAAO,GAAGjB,SAAS,CAACc,KAAK,CAAC,CAAC,CAAC;IAClCN,OAAO,CAAC;MAAEc,MAAM,EAAEL,OAAO,CAACK,MAAM;MAAEC,QAAQ,EAAEN,OAAO,CAACM;IAAS,CAAC,CAAC;EACnE,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACjBZ,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCb,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEkB,KAAK;MAAEE;IAAO,CAAE;IAAAtB,QAAA,EAChDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC3B,EAAA,CAvCWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}