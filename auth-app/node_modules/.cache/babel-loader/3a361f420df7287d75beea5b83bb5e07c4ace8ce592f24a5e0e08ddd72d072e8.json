{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Goose Gaming\\\\Lykoshin_project\\\\auth-app\\\\src\\\\components\\\\YearView.js\",\n  _s = $RefreshSig$();\n// src/components/YearView.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearView = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const userId = user === null || user === void 0 ? void 0 : user.userId;\n  const [events, setEvents] = useState([]);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchEvents = async () => {\n      if (!userId) {\n        console.error(\"Ошибка: userId не определен\");\n        return;\n      }\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/events`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setEvents(Array.isArray(response.data.events) ? response.data.events : []);\n      } catch (error) {\n        console.error('Ошибка при получении событий:', error);\n      }\n    };\n    fetchEvents();\n  }, [userId]);\n  const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n  const getDaysInMonth = month => {\n    return new Date(currentYear, month + 1, 0).getDate();\n  };\n  const getFirstDayOfMonth = month => {\n    return new Date(currentYear, month, 1).getDay();\n  };\n  const handleNextYear = () => {\n    setCurrentYear(currentYear + 1);\n  };\n  const handlePreviousYear = () => {\n    setCurrentYear(currentYear - 1);\n  };\n  const handleDayClick = date => {\n    navigate('/day', {\n      state: {\n        selectedDate: date\n      }\n    });\n  };\n  const today = new Date();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousYear,\n        style: buttonStyle,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '0 20px',\n          fontSize: '2em'\n        },\n        children: currentYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextYear,\n        style: buttonStyle,\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: monthsGridStyle,\n      children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: monthContainerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (() => {\n              const daysInMonth = getDaysInMonth(index);\n              const firstDay = getFirstDayOfMonth(index);\n              const rows = [];\n              let cells = [];\n              const adjustedFirstDay = firstDay === 0 ? 6 : firstDay - 1;\n              for (let i = 0; i < adjustedFirstDay; i++) {\n                cells.push(/*#__PURE__*/_jsxDEV(\"td\", {}, `empty-${i}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 52\n                }, this));\n              }\n              for (let day = 1; day <= daysInMonth; day++) {\n                const date = new Date(currentYear, index, day);\n                const isTodayFlag = date.toDateString() === today.toDateString();\n                cells.push(/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: isTodayFlag ? '#165882' : 'transparent',\n                    color: isTodayFlag ? '#ffffff' : 'black',\n                    cursor: 'pointer',\n                    textAlign: 'center',\n                    padding: '5px',\n                    borderRadius: '5px',\n                    height: '30px'\n                  },\n                  onClick: () => handleDayClick(date),\n                  children: [day, /*#__PURE__*/_jsxDEV(\"ul\", {\n                    style: {\n                      listStyleType: 'none',\n                      padding: 0,\n                      margin: 0,\n                      fontSize: '0.75em'\n                    },\n                    children: events.filter(event => new Date(event.date).getDate() === day && new Date(event.date).getMonth() === index && new Date(event.date).getFullYear() === currentYear).map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: event.title\n                    }, event.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 61\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 49\n                  }, this)]\n                }, day, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 45\n                }, this));\n                if ((day + adjustedFirstDay) % 7 === 0) {\n                  rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: cells\n                  }, `row-${rows.length}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 55\n                  }, this));\n                  cells = [];\n                }\n              }\n              if (cells.length > 0) {\n                rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: cells\n                }, `row-${rows.length}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 51\n                }, this));\n              }\n              return rows;\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(YearView, \"KUbeUe7Tqdb1Uxa1oegdc6GS96Q=\", false, function () {\n  return [useNavigate];\n});\n_c = YearView;\nconst buttonStyle = {\n  cursor: 'pointer',\n  padding: '10px',\n  fontSize: '16px',\n  color: '#ffffff',\n  backgroundColor: '#166582',\n  border: 'none',\n  borderRadius: '5px'\n};\nconst monthsGridStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gap: '20px',\n  width: '90%',\n  margin: '0 auto'\n};\nconst monthContainerStyle = {\n  padding: '10px',\n  backgroundColor: '#ffffff',\n  borderRadius: '15px',\n  boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)'\n};\nexport default YearView;\nvar _c;\n$RefreshReg$(_c, \"YearView\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","YearView","_s","user","userId","events","setEvents","currentYear","setCurrentYear","Date","getFullYear","navigate","fetchEvents","console","error","response","get","process","env","REACT_APP_API_URL","headers","localStorage","getItem","Array","isArray","data","months","getDaysInMonth","month","getDate","getFirstDayOfMonth","getDay","handleNextYear","handlePreviousYear","handleDayClick","date","state","selectedDate","today","style","textAlign","margin","children","display","justifyContent","alignItems","marginBottom","onClick","buttonStyle","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","monthsGridStyle","map","index","monthContainerStyle","width","borderCollapse","daysInMonth","firstDay","rows","cells","adjustedFirstDay","i","push","day","isTodayFlag","toDateString","backgroundColor","color","cursor","padding","borderRadius","height","listStyleType","filter","event","getMonth","title","id","length","_c","border","gridTemplateColumns","gap","boxShadow","$RefreshReg$"],"sources":["C:/Users/Goose Gaming/Lykoshin_project/auth-app/src/components/YearView.js"],"sourcesContent":["// src/components/YearView.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nconst YearView = () => {\r\n    const { user } = useContext(AuthContext);\r\n    const userId = user?.userId;\r\n    const [events, setEvents] = useState([]);\r\n    const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            if (!userId) {\r\n                console.error(\"Ошибка: userId не определен\");\r\n                return;\r\n            }\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/events`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                });\r\n                setEvents(Array.isArray(response.data.events) ? response.data.events : []);\r\n            } catch (error) {\r\n                console.error('Ошибка при получении событий:', error);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, [userId]);\r\n\r\n    const months = [\r\n        'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n        'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n    ];\r\n\r\n    const getDaysInMonth = (month) => {\r\n        return new Date(currentYear, month + 1, 0).getDate();\r\n    };\r\n\r\n    const getFirstDayOfMonth = (month) => {\r\n        return new Date(currentYear, month, 1).getDay();\r\n    };\r\n\r\n    const handleNextYear = () => {\r\n        setCurrentYear(currentYear + 1);\r\n    };\r\n\r\n    const handlePreviousYear = () => {\r\n        setCurrentYear(currentYear - 1);\r\n    };\r\n\r\n    const handleDayClick = (date) => {\r\n        navigate('/day', { state: { selectedDate: date } });\r\n    };\r\n\r\n    const today = new Date();\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', margin: '20px' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\r\n                <button onClick={handlePreviousYear} style={buttonStyle}>\r\n                    ←\r\n                </button>\r\n                <h2 style={{ margin: '0 20px', fontSize: '2em' }}>{currentYear}</h2>\r\n                <button onClick={handleNextYear} style={buttonStyle}>\r\n                    →\r\n                </button>\r\n            </div>\r\n            <div style={monthsGridStyle}>\r\n                {months.map((month, index) => (\r\n                    <div key={index} style={monthContainerStyle}>\r\n                        <h4>{month}</h4>\r\n                        <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                            <tbody>\r\n                                {(() => {\r\n                                    const daysInMonth = getDaysInMonth(index);\r\n                                    const firstDay = getFirstDayOfMonth(index);\r\n                                    const rows = [];\r\n                                    let cells = [];\r\n\r\n                                    const adjustedFirstDay = (firstDay === 0) ? 6 : firstDay - 1;\r\n\r\n                                    for (let i = 0; i < adjustedFirstDay; i++) {\r\n                                        cells.push(<td key={`empty-${i}`}></td>);\r\n                                    }\r\n\r\n                                    for (let day = 1; day <= daysInMonth; day++) {\r\n                                        const date = new Date(currentYear, index, day);\r\n                                        const isTodayFlag = date.toDateString() === today.toDateString();\r\n\r\n                                        cells.push(\r\n                                            <td\r\n                                                key={day}\r\n                                                style={{\r\n                                                    backgroundColor: isTodayFlag ? '#165882' : 'transparent',\r\n                                                    color: isTodayFlag ? '#ffffff' : 'black',\r\n                                                    cursor: 'pointer',\r\n                                                    textAlign: 'center',\r\n                                                    padding: '5px',\r\n                                                    borderRadius: '5px',\r\n                                                    height: '30px',\r\n                                                }}\r\n                                                onClick={() => handleDayClick(date)}\r\n                                            >\r\n                                                {day}\r\n                                                <ul style={{ listStyleType: 'none', padding: 0, margin: 0, fontSize: '0.75em' }}>\r\n                                                    {events\r\n                                                        .filter(event => \r\n                                                            new Date(event.date).getDate() === day &&\r\n                                                            new Date(event.date).getMonth() === index &&\r\n                                                            new Date(event.date).getFullYear() === currentYear\r\n                                                        )\r\n                                                        .map(event => (\r\n                                                            <li key={event.id}>{event.title}</li>\r\n                                                        ))}\r\n                                                </ul>\r\n                                            </td>\r\n                                        );\r\n\r\n                                        if ((day + adjustedFirstDay) % 7 === 0) {\r\n                                            rows.push(<tr key={`row-${rows.length}`}>{cells}</tr>);\r\n                                            cells = [];\r\n                                        }\r\n                                    }\r\n\r\n                                    if (cells.length > 0) {\r\n                                        rows.push(<tr key={`row-${rows.length}`}>{cells}</tr>);\r\n                                    }\r\n\r\n                                    return rows;\r\n                                })()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst buttonStyle = {\r\n    cursor: 'pointer',\r\n    padding: '10px',\r\n    fontSize: '16px',\r\n    color: '#ffffff',\r\n    backgroundColor: '#166582',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n};\r\n\r\nconst monthsGridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gap: '20px',\r\n    width: '90%',\r\n    margin: '0 auto',\r\n};\r\n\r\nconst monthContainerStyle = {\r\n    padding: '10px',\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: '15px',\r\n    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.1)',\r\n};\r\n\r\nexport default YearView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}